{"version":3,"file":"component---src-pages-checkout-js-c68e58ed75e3683af5a8.js","mappings":"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","sources":["webpack://netlify-functions/./const.js","webpack://netlify-functions/./src/components/utils/helpers.js","webpack://netlify-functions/./src/components/CartItems.js","webpack://netlify-functions/./src/components/checkout/stripe-checkout/stripe-checkout.js","webpack://netlify-functions/./src/components/Total.js","webpack://netlify-functions/./src/pages/checkout.js"],"sourcesContent":["export const AUTHORIZED_ID = \"isijolatosin2210@gmail.com\"\nexport const SHIPPING_COST = {\n  canada: 50,\n  usa: 100,\n  london: 100,\n}\nexport const CANADA = \"canada\"\nexport const USERS = \"users\"\nexport const BOOKINGS = \"bookings\"\nexport const FREE_SHIPPING_AMOUNT = 200\nexport const CURRENCY = \"cad\"\n\n// export const HTTPS_LINK = \"https://www.bandgluxuryempire.com\"\nexport const HTTPS_LINK = \"http://localhost:8888\"\n","import { HTTPS_LINK } from \"../../../const\"\n\nexport const isInCart = (product, cartItems) => {\n  return cartItems.find(item => item.id === product.id)\n}\n\n// This is where the server is running. When we deploy the app, this will be the hosting url\nconst API = HTTPS_LINK\n\nexport async function fetchFromAPI(endpoint, opts) {\n  const { method, body } = { method: \"POST\", body: null, ...opts }\n\n  const res = await fetch(`${API}/${endpoint}`, {\n    method,\n    ...(body && { body: JSON.stringify(body) }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n\n  return res.json()\n}\n","import React from \"react\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { useDispatch } from \"react-redux\"\nimport { MdAddShoppingCart } from \"react-icons/md\"\nimport { BsCartDash } from \"react-icons/bs\"\nimport { GiTrashCan } from \"react-icons/gi\"\nimport { MdOutlineKeyboardArrowUp } from \"react-icons/md\"\nimport { MdOutlineKeyboardArrowDown } from \"react-icons/md\"\nimport {\n  decreaseCartItem,\n  increaseCartItem,\n  removeCartItem,\n} from \"../../slices/appSlices\"\n\nconst CartItems = ({ product }) => {\n  const { title, image, price, quantity, description, id } = product\n  const [expand, setExpand] = React.useState(false)\n  const dispatch = useDispatch()\n\n  const pathToImage = getImage(image)\n\n  const prdct = { title, id, image, price, description }\n  const increaseItem = () => {\n    dispatch(increaseCartItem(prdct))\n  }\n  const decreaseItem = () => {\n    dispatch(decreaseCartItem(prdct))\n  }\n  const removeItem = () => {\n    dispatch(removeCartItem(prdct))\n  }\n\n  return (\n    <div className=\"cart-items-container\">\n      <div className=\"cart-image\">\n        <GatsbyImage image={pathToImage} alt={title} />\n      </div>\n      <div className=\"cart-item-info\">\n        <div>\n          <h4>{title}</h4>\n        </div>\n        <div className=\"price-quantity\">\n          <span>{`Price: CA$ ${price}`}</span>\n          <span>{`Quantity: ${quantity}`}</span>\n        </div>\n        <div className=\"description-readmore\">\n          {!expand && description.length >= 100 ? (\n            <span>{description.substring(0, 50)}...</span>\n          ) : (\n            <span>{description}</span>\n          )}\n          {description.length >= 100 && (\n            <span onClick={() => setExpand(!expand)} className=\"read_more\">\n              {expand ? (\n                <>\n                  <span>Read Less</span> <MdOutlineKeyboardArrowUp />\n                </>\n              ) : (\n                <>\n                  <span>Read More</span> <MdOutlineKeyboardArrowDown />\n                </>\n              )}\n            </span>\n          )}\n        </div>\n        <div className=\"cart-item-icons\">\n          <div className=\"cart-item-icon\" onClick={increaseItem}>\n            <MdAddShoppingCart />\n            <span>Add</span>\n          </div>\n          {quantity === 1 && (\n            <div className=\"cart-item-icon\" onClick={removeItem}>\n              <GiTrashCan />\n              <span>Delete</span>\n            </div>\n          )}\n          {quantity > 1 && (\n            <div className=\"cart-item-icon\" onClick={decreaseItem}>\n              <BsCartDash />\n              <span>Remove</span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CartItems\n","import React, { useContext } from \"react\"\nimport { useStripe } from \"@stripe/react-stripe-js\"\nimport { fetchFromAPI } from \"../../utils/helpers\"\nimport {\n  clearCartItem,\n  selectCartItems,\n  selectTotal,\n} from \"../../../../slices/appSlices\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { BsBagCheck } from \"react-icons/bs\"\nimport { AuthContext } from \"../../../context/auth\"\nimport {\n  CANADA,\n  FREE_SHIPPING_AMOUNT,\n  SHIPPING_COST,\n  CURRENCY,\n} from \"../../../../const\"\n\nconst StripeCheckout = () => {\n  const cartItems = useSelector(selectCartItems)\n  const stripe = useStripe()\n  const [email, setEmail] = React.useState(\"\")\n  const [errorMessage, setErrorMessage] = React.useState(null)\n  const [allowproceed, setAllowProceed] = React.useState(false) //CHANGE BACK TO FALSE\n  const [address, setAddress] = React.useState({\n    street: \"\",\n    city: \"\",\n    province: \"\",\n    postalcode: \"\",\n    country: \"\",\n  })\n  const [shippingCost, setShippingCost] = React.useState({\n    country: \"\",\n    cost: \"\",\n  })\n  const [error, setError] = React.useState(false)\n  const dispatch = useDispatch()\n  const { user } = useContext(AuthContext)\n  const inputOnchangeHandler = e => {\n    setAddress({ ...address, [e.target.name]: e.target.value })\n  }\n  const total = useSelector(selectTotal)\n  // Submit address\n  const handleSubmitAddress = () => {\n    const shippingAd = `${address.street}, ${address.city}. ${address.province}. ${address.postalcode}. ${address.country}`\n\n    if (!user || !email) {\n      setError(true)\n    }\n    if (\n      (user &&\n        address?.street &&\n        address?.city &&\n        address?.province &&\n        address?.postalcode &&\n        address?.country) ||\n      (email &&\n        address?.street &&\n        address?.city &&\n        address?.province &&\n        address?.postalcode &&\n        address?.country)\n    ) {\n      localStorage.setItem(\"address\", shippingAd)\n      // dispatch(setShippingObject(shippingAd))\n      setAllowProceed(true)\n      setAddress({\n        street: \"\",\n        city: \"\",\n        province: \"\",\n        postalcode: \"\",\n        country: \"\",\n      })\n      // setEmail(\"\")\n      setError(false)\n    }\n    Object.keys(SHIPPING_COST).filter(\n      cntry =>\n        cntry.toLowerCase() === address.country.toLowerCase() &&\n        setShippingCost({\n          country: cntry,\n          cost: SHIPPING_COST[cntry],\n        })\n    )\n  }\n\n  // Proceed function\n  const redirectToCheckout = async e => {\n    e.preventDefault()\n    if (allowproceed) {\n      // line items\n      const line_items = cartItems.map(item => {\n        const description = `${item.description.substring(0, 200)}...`\n        return {\n          quantity: item.quantity,\n          price_data: {\n            currency: CURRENCY,\n            unit_amount: item.price * 100, //amount is in center\n            product_data: {\n              name: item.title,\n              description: description,\n            },\n          },\n        }\n      })\n\n      // shipping options\n      const shipping_options =\n        total >= FREE_SHIPPING_AMOUNT && shippingCost.country === CANADA\n          ? [\n              {\n                shipping_rate_data: {\n                  type: \"fixed_amount\",\n                  fixed_amount: {\n                    amount: 0,\n                    currency: CURRENCY,\n                  },\n                  display_name: \"Free shipping\",\n                  // Delivers between 5-7 business days\n                  delivery_estimate: {\n                    minimum: {\n                      unit: \"business_day\",\n                      value: 5,\n                    },\n                    maximum: {\n                      unit: \"business_day\",\n                      value: 7,\n                    },\n                  },\n                },\n              },\n            ]\n          : [\n              {\n                shipping_rate_data: {\n                  type: \"fixed_amount\",\n                  fixed_amount: {\n                    amount: shippingCost.cost * 100,\n                    currency: CURRENCY,\n                  },\n                  display_name: \"Paid Delivery\",\n                  // Delivers in exactly 1 business day\n                  delivery_estimate: {\n                    minimum: {\n                      unit: \"business_day\",\n                      value: 5,\n                    },\n                    maximum: {\n                      unit: \"business_day\",\n                      value: 7,\n                    },\n                  },\n                },\n              },\n            ]\n\n      const response = await fetchFromAPI(\"create-checkout-session\", {\n        body: {\n          line_items,\n          shipping_options,\n          customer_email: user ? user?.email || user?.user?.email : email,\n        },\n      })\n      const { sessionId } = response\n      const { error } = await stripe.redirectToCheckout({\n        sessionId,\n      })\n\n      if (error) {\n        setErrorMessage(error.message)\n      }\n    }\n  }\n\n  return (\n    <form onSubmit={redirectToCheckout}>\n      <div className=\"shipping-add-header\">\n        <div className=\"ship-head\">\n          <p>Shipping - Cost</p>\n        </div>\n        <div className=\"ship-countries\">\n          <ul>\n            <li>canada - CA$ {SHIPPING_COST.canada}</li>\n            <li>usa - CA$ {SHIPPING_COST.usa}</li>\n            <li>london - CA$ {SHIPPING_COST.london}</li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"inputs\">\n        {!user && (\n          <input\n            type=\"email\"\n            onChange={e => setEmail(e.target.value)}\n            placeholder=\"Email\"\n            value={email}\n            className={\n              error && !email\n                ? \"user-email-input input-error\"\n                : \"user-email-input\"\n            }\n          />\n        )}\n        <input\n          name=\"street\"\n          type=\"text\"\n          value={address.street}\n          onChange={inputOnchangeHandler}\n          placeholder=\"Address\"\n          className={\n            error && !address.street\n              ? \"user-email-input input-error\"\n              : \"user-email-input\"\n          }\n        />\n        <input\n          name=\"city\"\n          type=\"text\"\n          value={address.city}\n          onChange={inputOnchangeHandler}\n          placeholder=\"City\"\n          className={\n            error && !address.city\n              ? \"user-email-input input-error\"\n              : \"user-email-input\"\n          }\n        />\n        <input\n          name=\"province\"\n          type=\"text\"\n          value={address.province}\n          onChange={inputOnchangeHandler}\n          placeholder=\"Province\"\n          className={\n            error && !address.province\n              ? \"user-email-input input-error\"\n              : \"user-email-input\"\n          }\n        />\n        <input\n          name=\"postalcode\"\n          type=\"text\"\n          value={address.postalcode}\n          onChange={inputOnchangeHandler}\n          placeholder=\"Postal Code\"\n          className={\n            error && !address.postalcode\n              ? \"user-email-input input-error\"\n              : \"user-email-input\"\n          }\n        />\n        <input\n          name=\"country\"\n          type=\"text\"\n          value={address.country}\n          onChange={inputOnchangeHandler}\n          placeholder=\"Country\"\n          className={\n            error && !address.country\n              ? \"user-email-input input-error\"\n              : \"user-email-input\"\n          }\n        />\n        <span onClick={handleSubmitAddress} className=\"btn block subt-add\">\n          SUBMIT ADDRESS\n        </span>\n      </div>\n      {email.substr(email.length - 3) === \"com\" && (\n        <div className=\"email-verify\">\n          <span>Please verify you have the correct email and address</span>\n        </div>\n      )}\n      {error && email.length < 1 && (\n        <div className=\"user-email-input-error\">\n          <span>Hey! You have missing credentials!</span>\n        </div>\n      )}\n      <div className=\"total-button\">\n        <button\n          onClick={() => !allowproceed && setError(true)}\n          className=\"btn total-btn\"\n          type=\"submit\"\n        >\n          PROCEED |{\" \"}\n          <span>\n            <BsBagCheck />\n          </span>\n        </button>\n\n        <span\n          onClick={() => dispatch(clearCartItem())}\n          className=\"btn block total_btn\"\n        >\n          CLEAR CART\n        </span>\n      </div>\n      {errorMessage && (\n        <div className=\"checkout-error\">\n          <span>{errorMessage}</span>\n        </div>\n      )}\n    </form>\n  )\n}\n\nexport default StripeCheckout\n","import React from \"react\"\nimport StripeCheckout from \"./checkout/stripe-checkout/stripe-checkout\"\n\nconst Total = ({ itemCount, total }) => {\n  return (\n    <div>\n      <div className=\"total-top\">\n        <p>Total Items: {itemCount}</p>\n        <span>{`Amount to Pay: CA$ ${total}`}</span>\n      </div>\n      <StripeCheckout />\n    </div>\n  )\n}\n\nexport default Total\n","import React from \"react\"\nimport { useSelector } from \"react-redux\"\nimport Layout from \"../components/Layout\"\nimport CartItems from \"../components/CartItems\"\nimport {\n  selectCartItems,\n  selectItemCount,\n  selectTotal,\n} from \"../../slices/appSlices\"\nimport Total from \"../components/Total\"\n\nconst Checkout = () => {\n  const itemCount = useSelector(selectItemCount)\n  const total = useSelector(selectTotal)\n  const cartItems = useSelector(selectCartItems)\n\n  return (\n    <Layout>\n      <div className=\"cart\">\n        <h2>Cart</h2>\n        {cartItems.length === 0 ? (\n          <div className=\"empty\">Your Cart is Empty</div>\n        ) : (\n          <div className=\"cart-container\">\n            <div>\n              <div className=\"cart-left\">\n                {cartItems.map(item => (\n                  <CartItems product={item} key={item.id} />\n                ))}\n              </div>\n            </div>\n            <div className=\"total\">\n              <Total itemCount={itemCount} total={total} />\n            </div>\n          </div>\n        )}\n      </div>\n    </Layout>\n  )\n}\n\nexport default Checkout\n"],"names":["AUTHORIZED_ID","SHIPPING_COST","canada","usa","london","CANADA","USERS","BOOKINGS","FREE_SHIPPING_AMOUNT","CURRENCY","HTTPS_LINK","isInCart","product","cartItems","find","item","id","API","fetchFromAPI","endpoint","opts","method","body","fetch","JSON","stringify","headers","res","json","title","image","price","quantity","description","React","expand","setExpand","dispatch","useDispatch","pathToImage","getImage","prdct","className","G","alt","length","substring","onClick","increaseCartItem","removeCartItem","decreaseCartItem","useSelector","selectCartItems","stripe","useStripe","email","setEmail","errorMessage","setErrorMessage","allowproceed","setAllowProceed","street","city","province","postalcode","country","address","setAddress","cost","shippingCost","setShippingCost","error","setError","user","useContext","AuthContext","inputOnchangeHandler","e","target","name","value","total","selectTotal","redirectToCheckout","preventDefault","line_items","map","price_data","currency","unit_amount","product_data","shipping_options","shipping_rate_data","type","fixed_amount","amount","display_name","delivery_estimate","minimum","unit","maximum","customer_email","response","sessionId","message","onSubmit","onChange","placeholder","shippingAd","localStorage","setItem","Object","keys","filter","cntry","toLowerCase","substr","clearCartItem","itemCount","selectItemCount","Layout","key"],"sourceRoot":""}