{"version":3,"file":"component---src-pages-contentful-recipe-title-js-090efc4b75217c7225fd.js","mappings":"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","sources":["webpack://netlify-functions/./const.js","webpack://netlify-functions/./src/components/utils/helpers.js","webpack://netlify-functions/./src/pages/{ContentfulRecipe.title}.js"],"sourcesContent":["export const AUTHORIZED_ID_1 = \"isijolatosin2210@gmail.com\"\nexport const AUTHORIZED_ID_2 = \"bandgluxuryinternal@gmail.com\"\nexport const AUTHORIZED_ID_3 = \"bandgluxuryinternal@gmail.com\"\nexport const SHIPPING_COST = {\n  canada: 6.99,\n  usa: 20.99,\n  london: 20.99,\n}\nexport const CANADA = \"canada\"\nexport const USERS = \"users\"\nexport const BOOKINGS = \"bookings\"\nexport const FREE_SHIPPING_AMOUNT = 200\nexport const CURRENCY = \"cad\"\nexport const TAX_PERCENT = 0.13\n\nexport const HTTPS_LINK = \"https://www.bandgluxuryempire.com\"\n// export const HTTPS_LINK = \"http://localhost:8888\"\n","import { HTTPS_LINK } from \"../../../const\"\n\nexport const isInCart = (product, cartItems) => {\n  return cartItems.find(item => item.id === product.id)\n}\n\n// This is where the server is running. When we deploy the app, this will be the hosting url\nconst API = HTTPS_LINK\n\nexport async function fetchFromAPI(endpoint, opts) {\n  const { method, body } = { method: \"POST\", body: null, ...opts }\n\n  const res = await fetch(`${API}/${endpoint}`, {\n    method,\n    ...(body && { body: JSON.stringify(body) }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n\n  return res.json()\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { BsClockHistory, BsClock } from \"react-icons/bs\"\nimport { GiTakeMyMoney } from \"react-icons/gi\"\nimport Layout from \"../components/Layout\"\nimport { FiShoppingCart } from \"react-icons/fi\"\nimport { MdAddReaction } from \"react-icons/md\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n  addToCartItem,\n  increaseCartItem,\n  selectCartItems,\n} from \"../../slices/appSlices\"\nimport { isInCart } from \"../components/utils/helpers\"\n\nconst DynamicPage = ({ data: { contentfulRecipe } }) => {\n  const {\n    id,\n    title,\n    cookTime,\n    content,\n    prepTime,\n    serving: price,\n    description: { description },\n    image,\n  } = contentfulRecipe\n\n  const pathToImage = getImage(image)\n  const { instructions, ingredients, tools, benefits } = content\n  const [added, setAdded] = React.useState(false)\n  const [icon, setIcon] = React.useState(null)\n  const cartItems = useSelector(selectCartItems)\n  const dispatch = useDispatch()\n\n  const product = { title, id, image, price, description }\n  const addToCart = () => {\n    dispatch(addToCartItem(product))\n    setIcon(id)\n    setTimeout(() => {\n      setAdded(true)\n    }, 300)\n  }\n\n  const IncreaseItem = () => {\n    dispatch(increaseCartItem(product))\n    setIcon(id)\n    setTimeout(() => {\n      setAdded(true)\n    }, 300)\n  }\n\n  if (added) {\n    setTimeout(() => {\n      setAdded(false)\n    }, 2000)\n  }\n  return (\n    <Layout>\n      <main className=\"dynamic-page\">\n        <div className=\"product-page\">\n          {/* hero */}\n          <section className=\"product-hero\">\n            <div className=\"single-container\">\n              <GatsbyImage\n                image={pathToImage}\n                alt={title}\n                className=\"single-image\"\n              />\n              {!isInCart(product, cartItems) ? (\n                <div onClick={addToCart} className=\"add-to-cart\">\n                  <span>ADD TO CART |</span>\n                  <FiShoppingCart />\n                  {icon === id && (\n                    <div className={added ? \"added added-show\" : \"added\"}>\n                      <MdAddReaction />\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <div onClick={IncreaseItem} className=\"add-to-cart2\">\n                  <span>ADD MORE |</span>\n                  <FiShoppingCart />\n                  {icon === id && (\n                    <div className={added ? \"added added-show\" : \"added\"}>\n                      <MdAddReaction />\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n            <article className=\"product-info\">\n              <h2>{title}</h2>\n              <p>{description}</p>\n\n              <div className=\"product-icons\">\n                {/* <article>\n                  <BsClock />\n                  <h5>Prep time</h5>\n                  <p>{prepTime} mins</p>\n                </article>\n                <article>\n                  <BsClockHistory />\n                  <h5>Cook time</h5>\n                  <p>{cookTime} mins</p>\n                </article> */}\n                <article>\n                  <GiTakeMyMoney />\n                  <h5>Price</h5>\n                  <p>CA${price}</p>\n                </article>\n              </div>\n            </article>\n          </section>\n          <section className=\"product-content\">\n            <article className=\"product-content-first\">\n              <h4>Instructions</h4>\n              {instructions.map((instruct, idx) => (\n                <div key={idx} className=\"single-instruction\">\n                  <header>\n                    <p>Step {idx + 1}</p>\n                    <div></div>\n                  </header>\n                  <p>{instruct}</p>\n                </div>\n              ))}\n            </article>\n            <article className=\"second-column\">\n              <div>\n                <h4>Ingredients</h4>\n                {ingredients.map((ing, idx) => (\n                  <p key={idx} className=\"single-product\">\n                    {ing}\n                  </p>\n                ))}\n              </div>\n              {tools && (\n                <div>\n                  <h4>Tools</h4>\n                  {tools.map((tool, idx) => (\n                    <p key={idx} className=\"single-tool\">\n                      {tool}\n                    </p>\n                  ))}\n                </div>\n              )}\n              {benefits && (\n                <div>\n                  <h4>Benefits</h4>\n                  {benefits.map((benefit, idx) => (\n                    <p key={idx} className=\"single-tool\">\n                      {benefit}\n                    </p>\n                  ))}\n                </div>\n              )}\n            </article>\n          </section>\n        </div>\n      </main>\n    </Layout>\n  )\n}\nexport default DynamicPage\n\nexport const query = graphql`\n  query getSingleRecipe($title: String) {\n    contentfulRecipe(title: { eq: $title }) {\n      id\n      title\n      cookTime\n      content {\n        ingredients\n        instructions\n        benefits\n        tags\n      }\n      description {\n        description\n      }\n      prepTime\n      serving\n      image {\n        gatsbyImageData(layout: CONSTRAINED, placeholder: TRACED_SVG)\n      }\n    }\n  }\n`\n"],"names":["AUTHORIZED_ID_1","AUTHORIZED_ID_2","AUTHORIZED_ID_3","SHIPPING_COST","canada","usa","london","CANADA","USERS","BOOKINGS","FREE_SHIPPING_AMOUNT","CURRENCY","TAX_PERCENT","HTTPS_LINK","isInCart","product","cartItems","find","item","id","API","fetchFromAPI","endpoint","opts","method","body","fetch","JSON","stringify","headers","res","json","contentfulRecipe","data","title","content","cookTime","price","prepTime","serving","description","image","pathToImage","getImage","instructions","ingredients","tools","benefits","React","added","setAdded","icon","setIcon","useSelector","selectCartItems","dispatch","useDispatch","setTimeout","className","G","alt","onClick","increaseCartItem","addToCartItem","map","instruct","idx","key","ing","tool","benefit"],"sourceRoot":""}