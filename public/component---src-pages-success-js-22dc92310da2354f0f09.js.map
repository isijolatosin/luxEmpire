{"version":3,"file":"component---src-pages-success-js-22dc92310da2354f0f09.js","mappings":"4JAAO,IAAIA,EAAQ,CACjBC,QAAS,2BCDAC,EAAiB,SAAwBC,EAAQC,EAAWC,GACrE,IAAKF,EACH,KAAM,iFAGR,IAAKC,EACH,KAAM,wEAGR,IAAKC,EACH,KAAM,mFAGR,OAAO,GCZF,IAAIC,EAAwB,SAASA,EAAsBC,ICDnD,SAAyBC,EAAUC,GAChD,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,qCDAtBC,CAAgBC,KAAMN,GAEtBM,KAAKC,OAASN,EAAaM,OAC3BD,KAAKE,KAAOP,EAAaQ,cEHhBC,EAAW,SAAkBC,EAAKC,GAC3C,IAAIC,EAAUC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAClF,OAAO,IAAIG,SAAQ,SAAUC,EAASC,GACpC,IAAIC,EAAM,IAAIC,eACdD,EAAIE,iBAAiB,QAAQ,SAAUC,GACrC,IAAIC,EAASD,EAAKC,OACdC,EAAiB,IAAIzB,EAAsBwB,GAEjB,MAA1BC,EAAelB,QAA0C,OAAxBkB,EAAejB,KAClDU,EAAQO,GAERN,EAAOM,MAGXL,EAAIE,iBAAiB,SAAS,SAAUI,GACtC,IAAIF,EAASE,EAAMF,OACnBL,EAAO,IAAInB,EAAsBwB,OAEnCJ,EAAIO,KAAK,OAAQjC,EAAMC,QAAUgB,GAAK,GACtCiB,OAAOC,KAAKhB,GAASiB,SAAQ,SAAUC,GACrCX,EAAIY,iBAAiBD,EAAKlB,EAAQkB,OAEpCX,EAAIa,KAAKrB,OCpBb,GACEsB,KCEgB,SAAcrC,GAC9B,IAAIsC,EAASrB,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,0BACjFpB,EAAM0C,QAAUvC,EAChBH,EAAMC,QAAUwC,GDJhBF,KEMgB,SAAcnC,EAAWC,EAAYsC,EAAexC,GACpE,IAAIyC,EAAMzC,GAAUH,EAAM0C,QAC1BxC,EAAe0C,EAAKxC,EAAWC,GAC/B,IAAIwC,EAAS,CACXC,YAAa,QACbC,QAASH,EACTI,WAAY5C,EACZ6C,YAAa5C,EACb6C,gBAAiBP,GAEnB,OAAO3B,EAAS,uBAAwBmC,KAAKC,UAAUP,GAAS,CAC9D,eAAgB,sBFhBlBQ,SGsBoB,SAAkBjD,EAAWC,EAAYiD,EAAMnD,GACnE,IAAIyC,EAAMzC,GAAUH,EAAM0C,QACtBa,EA3Ba,SAAsBD,GACvC,IAAIC,EAQJ,KALEA,EADkB,iBAATD,EACKE,SAASC,cAAcH,GAEvBA,IAG6B,SAAzBC,EAAYG,SAC9B,KAAM,0FAGR,OAAOH,EAcWI,CAAaL,GAC/BpD,EAAe0C,EAAKxC,EAAWC,GAC/B,IAAIuD,EAAW,IAAIC,SAASN,GAK5B,OAJAK,EAASE,OAAO,cAAe,SAC/BF,EAASE,OAAO,aAAc1D,GAC9BwD,EAASE,OAAO,cAAezD,GAC/BuD,EAASE,OAAO,UAAWlB,GACpB5B,EAAS,4BAA6B4C,M,sSCtCxC,IAAMG,EAAkB,6BAClBC,EAAkB,gCAClBC,EAAkB,gCAClBC,EAAgB,CAC3BC,OAAQ,GACRC,IAAK,IACLC,OAAQ,KAEGC,EAAS,SACTC,EAAQ,QACRC,EAAW,WACXC,EAAuB,IACvBC,EAAW,MACXC,EAAc,IAGdC,EAAa,yB,oICuF1B,UA7FgB,WACd,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBF,KACFG,EAAWC,aAAaC,QAAQ,aAChCC,EAAcF,aAAaC,QAAQ,WACnCE,EAAeH,aAAaC,QAAQ,aAEpCG,EAAgB,CACpBC,KAAMN,EACNO,QAAQ,+DACRC,OAAQX,MAAAA,OAAF,EAAEA,EAAMY,OAIhBC,YAAW,YACTb,MAAAA,OAAA,EAAAA,EAAMY,QACiB,IAArBf,EAAU1D,QACV0D,EAAUiB,KAAI,SAAAC,GAEZC,EAAAA,GAAAA,WAAc,SACXC,KAAOjB,MAAAA,OADV,EACUA,EAAMY,OADhB,KAEGM,WAAW,aACXC,IAAI,CACHC,GAAIL,EAAKK,GACTC,MAAON,EAAKM,MACZC,YAAaP,EAAKO,YAClBC,SAAUR,EAAKQ,SACfC,MAAOT,EAAKS,MACZC,QAASnB,EACToB,SAAUnB,IAEXoB,MAAK,WACJC,QAAQC,IAAR,kBAEDC,OAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAI,QAAUE,EAAMrB,YAE9CM,EAAAA,GAAAA,WAAc,SACXC,IAAOe,EAAAA,cADV,KAEGd,WAAW,iBACXC,IAAI,CACHC,GAAIL,EAAKK,GACTC,MAAON,EAAKM,MACZC,YAAaP,EAAKO,YAClBC,SAAUR,EAAKQ,SACfC,MAAOT,EAAKS,MACZC,QAASnB,EACToB,SAAUnB,IAEXoB,MAAK,WACJC,QAAQC,IAAR,kBAEDC,OAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAI,QAAUE,EAAMrB,eAGlDf,GAASsC,EAAAA,EAAAA,SACR,KAEHpB,YAAW,WACTqB,MACC,KAGH,IAAMA,EAAoC,WACxCC,EAAAA,GAAAA,KAEI,kBACA,mBACA3B,EACA,8BAEDmB,MAAK,SAAAS,OACLN,OAAM,SAAAO,GAAG,OAAIT,QAAQC,IAAIQ,OAG9B,OACE,QAAC,IAAD,MACE,eAAKC,UAAU,iBACb,kDACA,oBACE,+GAKF,QAAC,KAAD,CAAMC,GAAG,MACP","sources":["webpack://netlify-functions/./node_modules/emailjs-com/es/store/store.js","webpack://netlify-functions/./node_modules/emailjs-com/es/utils/validateParams.js","webpack://netlify-functions/./node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","webpack://netlify-functions/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://netlify-functions/./node_modules/emailjs-com/es/api/sendPost.js","webpack://netlify-functions/./node_modules/emailjs-com/es/index.js","webpack://netlify-functions/./node_modules/emailjs-com/es/methods/init/init.js","webpack://netlify-functions/./node_modules/emailjs-com/es/methods/send/send.js","webpack://netlify-functions/./node_modules/emailjs-com/es/methods/sendForm/sendForm.js","webpack://netlify-functions/./const.js","webpack://netlify-functions/./src/pages/success.js"],"sourcesContent":["export var store = {\n  _origin: 'https://api.emailjs.com'\n};","export var validateParams = function validateParams(userID, serviceID, templateID) {\n  if (!userID) {\n    throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n  }\n\n  if (!serviceID) {\n    throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n  }\n\n  if (!templateID) {\n    throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n  }\n\n  return true;\n};","import _classCallCheck from \"/Users/tosinisijola/Desktop/BandGluxuryempire/BandGLE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nexport var EmailJSResponseStatus = function EmailJSResponseStatus(httpResponse) {\n  _classCallCheck(this, EmailJSResponseStatus);\n\n  this.status = httpResponse.status;\n  this.text = httpResponse.responseText;\n};","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport var sendPost = function sendPost(url, data) {\n  var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.addEventListener('load', function (_ref) {\n      var target = _ref.target;\n      var responseStatus = new EmailJSResponseStatus(target);\n\n      if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n        resolve(responseStatus);\n      } else {\n        reject(responseStatus);\n      }\n    });\n    xhr.addEventListener('error', function (_ref2) {\n      var target = _ref2.target;\n      reject(new EmailJSResponseStatus(target));\n    });\n    xhr.open('POST', store._origin + url, true);\n    Object.keys(headers).forEach(function (key) {\n      xhr.setRequestHeader(key, headers[key]);\n    });\n    xhr.send(data);\n  });\n};","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n  init: init,\n  send: send,\n  sendForm: sendForm\n};","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\n\nexport var init = function init(userID) {\n  var origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'https://api.emailjs.com';\n  store._userID = userID;\n  store._origin = origin;\n};","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\n\nexport var send = function send(serviceID, templateID, templatePrams, userID) {\n  var uID = userID || store._userID;\n  validateParams(uID, serviceID, templateID);\n  var params = {\n    lib_version: '3.2.0',\n    user_id: uID,\n    service_id: serviceID,\n    template_id: templateID,\n    template_params: templatePrams\n  };\n  return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n    'Content-type': 'application/json'\n  });\n};","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n\nvar findHTMLForm = function findHTMLForm(form) {\n  var currentForm;\n\n  if (typeof form === 'string') {\n    currentForm = document.querySelector(form);\n  } else {\n    currentForm = form;\n  }\n\n  if (!currentForm || currentForm.nodeName !== 'FORM') {\n    throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n  }\n\n  return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\n\n\nexport var sendForm = function sendForm(serviceID, templateID, form, userID) {\n  var uID = userID || store._userID;\n  var currentForm = findHTMLForm(form);\n  validateParams(uID, serviceID, templateID);\n  var formData = new FormData(currentForm);\n  formData.append('lib_version', '3.2.0');\n  formData.append('service_id', serviceID);\n  formData.append('template_id', templateID);\n  formData.append('user_id', uID);\n  return sendPost('/api/v1.0/email/send-form', formData);\n};","export const AUTHORIZED_ID_1 = \"isijolatosin2210@gmail.com\"\nexport const AUTHORIZED_ID_2 = \"bandgluxuryinternal@gmail.com\"\nexport const AUTHORIZED_ID_3 = \"bandgluxuryinternal@gmail.com\"\nexport const SHIPPING_COST = {\n  canada: 50,\n  usa: 100,\n  london: 100,\n}\nexport const CANADA = \"canada\"\nexport const USERS = \"users\"\nexport const BOOKINGS = \"bookings\"\nexport const FREE_SHIPPING_AMOUNT = 200\nexport const CURRENCY = \"cad\"\nexport const TAX_PERCENT = 0.13\n\n// export const HTTPS_LINK = \"https://www.bandgluxuryempire.com\"\nexport const HTTPS_LINK = \"http://localhost:8888\"\n","import { Link } from \"gatsby\"\nimport React, { useContext } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { clearCartItem, selectCartItems } from \"../../slices/appSlices\"\nimport Layout from \"../components/Layout\"\nimport { db } from \"../../firebase\"\nimport { AuthContext } from \"../context/auth\"\nimport emailjs from \"emailjs-com\"\nimport { AUTHORIZED_ID } from \"../../const\"\n\nconst Success = () => {\n  const dispatch = useDispatch()\n  const cartItems = useSelector(selectCartItems)\n  const { user } = useContext(AuthContext)\n  const userName = localStorage.getItem(\"user-name\")\n  const userAddress = localStorage.getItem(\"address\")\n  const customerName = localStorage.getItem(\"user-name\")\n\n  const messageParams = {\n    name: userName,\n    message: `Thank you for your patronage. Your order has been processed.`,\n    client: user?.email,\n  }\n\n  // push data to FB\n  setTimeout(() => {\n    user?.email &&\n      cartItems.length !== 0 &&\n      cartItems.map(item => {\n        // shopping path\n        db.collection(\"users\")\n          .doc(`${user?.email}/`)\n          .collection(\"shoppings\")\n          .add({\n            id: item.id,\n            title: item.title,\n            description: item.description,\n            quantity: item.quantity,\n            price: item.price,\n            address: userAddress,\n            customer: customerName,\n          })\n          .then(() => {\n            console.log(`SUCCESSFULL`)\n          })\n          .catch(error => console.log(\"Error\" + error.message))\n        // admin path\n        db.collection(\"admin\")\n          .doc(`${AUTHORIZED_ID}/`)\n          .collection(\"all-purchased\")\n          .add({\n            id: item.id,\n            title: item.title,\n            description: item.description,\n            quantity: item.quantity,\n            price: item.price,\n            address: userAddress,\n            customer: customerName,\n          })\n          .then(() => {\n            console.log(`SUCCESSFULL`)\n          })\n          .catch(error => console.log(\"Error\" + error.message))\n      })\n\n    dispatch(clearCartItem())\n  }, 5000)\n\n  setTimeout(() => {\n    SendClientSuccessfulPurchaseEmail()\n  }, 10000)\n\n  // generate automated email to client\n  const SendClientSuccessfulPurchaseEmail = () => {\n    emailjs\n      .send(\n        \"service_gtimr9g\",\n        \"template_7pjokln\",\n        messageParams,\n        \"user_trCtSiPOmjsEtAADPhq71\"\n      )\n      .then(res => {})\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <Layout>\n      <div className=\"success-page\">\n        <h1>Thank you for your purchase</h1>\n        <div>\n          <span>\n            We are currently processing your order and will send you a\n            confirmation email shortly\n          </span>\n        </div>\n        <Link to=\"/\">\n          <button>Continue Shopping</button>\n        </Link>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Success\n"],"names":["store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","httpResponse","instance","Constructor","TypeError","_classCallCheck","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","AUTHORIZED_ID_1","AUTHORIZED_ID_2","AUTHORIZED_ID_3","SHIPPING_COST","canada","usa","london","CANADA","USERS","BOOKINGS","FREE_SHIPPING_AMOUNT","CURRENCY","TAX_PERCENT","HTTPS_LINK","dispatch","useDispatch","cartItems","useSelector","selectCartItems","user","useContext","AuthContext","userName","localStorage","getItem","userAddress","customerName","messageParams","name","message","client","email","setTimeout","map","item","db","doc","collection","add","id","title","description","quantity","price","address","customer","then","console","log","catch","error","AUTHORIZED_ID","clearCartItem","SendClientSuccessfulPurchaseEmail","emailjs","res","err","className","to"],"sourceRoot":""}